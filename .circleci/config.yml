# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: root

    steps:
      - checkout

      - run:
          name: "Prepare Environment"
          command: |
            sudo apt update
            sudo docker-php-ext-install zip
            sudo docker-php-ext-install pdo_mysql

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: "Install Dependencies"
          command: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # prepare the database
      - run:
          name: "Create Environment file and generate app key"
          command: |
            cp .env.example .env
            php artisan key:generate

      - run:
          name: "Create database and run migration"
          command: |
            php artisan migrate
      # run tests with phpunit
      - run:
          name: "Run Tests"
          command: ./vendor/bin/phpunit
  deploy:
    docker:
      - image: circleci/php:7.2-browsers
    working_directory: ~/laravel
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "96:0a:03:a7:b6:8b:8c:a4:e7:0d:14:da:c7:6e:5b:c8"
      - run:
        name: Install Deployer
        command: |
          find . -type f -not -path "./vendor/*" -exec chmod 664 {} \;
          find . -type d -not -path "./vendor/*" -exec chmod 775 {} \;
      - run:
        name: Deploy
        command: php artisan deploy test_ci.taro.swallowshub.net -s upload
workflows:
  version: 2
  notify_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: develop

